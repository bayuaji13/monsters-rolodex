{"version":3,"sources":["components/card/card.component.jsx","logo.svg","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardList","monsters","map","SearchBox","placeholder","handleChange","onChange","App","state","string","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,GCHE,I,kBDGK,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAOL,EAAMI,QAAQE,KAArB,YEFSC,EAAW,SAACP,GAAD,OACpB,qBAAKC,UAAU,YAAf,SAEID,EAAMQ,SAASC,KAAI,SAACL,GAChB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLzBK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAX,UAAU,SACVU,YAAaA,EACbE,SAAUD,MC4CCE,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,OAAS,YACTR,SAAW,GAGXS,YAAc,IARJ,E,gEAaO,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAC,SAAaD,S,+BAKrC,IAAD,SAC0BE,KAAKT,MAA9BP,EADD,EACCA,SAASS,EADV,EACUA,YAEXQ,EAAmBjB,EAASkB,QAAO,SAAAtB,GAAO,OAC9CA,EAAQE,KAAKqB,cAAcC,SAASX,EAAYU,kBAGlD,OACE,sBAAK1B,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CACEU,YAAY,iBACZC,aAAgB,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAAC,YAAgBM,EAAEC,OAAOC,WAE/D,cAAC,EAAD,CAAUvB,SAAUiB,W,GApCRO,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1227ce01.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`}></img>\r\n    <h1 > {props.monster.name} </h1>\r\n    </div>\r\n)","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport \"./card-list.style.css\";\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList = (props) => (\r\n    <div className='card-list'>\r\n    {\r\n        props.monsters.map((monster) => {\r\n            return <Card key={monster.id} monster={monster}/>\r\n        })\r\n    }\r\n    </div>\r\n)","import React from \"react\";\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input \r\n    className='search'\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n    >\r\n    </input>\r\n)","import logo from './logo.svg';\nimport react,{Component} from 'react';\nimport './App.css';\n\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      string : 'Heloooooo',\n      monsters : [\n\n      ],\n      searchField : ''\n    };\n\n  } \n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({'monsters' : users}))\n  }\n  \n\n\n  render() {\n    const { monsters,searchField } = this.state;\n\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    \n    return (\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox\n        placeholder='search monster'\n        handleChange = {e => this.setState({'searchField' : e.target.value})}\n      ></SearchBox>\n      <CardList monsters={filteredMonsters}> \n      </CardList>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}